"""
Django settings for CityPattle project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import dj_database_url
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

#Razorpay api keys
RAZORPAY_KEY_ID = "rzp_test_RKW9KQcSe9l2Km"
RAZORPAY_KEY_SECRET = "fSqTfxHjFgox0Py1bqFoWdZb"

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY', 'django-insecure-v5nmpth0hlv-2k*-wbe5u!3og-agozxurig!w&f11q!ki6x(qw')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG', 'True') == 'True'

ALLOWED_HOSTS = ['192.168.1.10', 'localhost', '127.0.0.1','*','192.168.1.7','10.76.105.36','192.168.1.12','10.76.105.36']
# ALLOWED_HOSTS = [
#     'citypattle.onrender.com',
#     "192.168.1.4",
#     "127.0.0.1",
#     "localhost",
#     "10.0.2.2",]

CORS_ALLOW_ALL_ORIGINS = True 

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'API',
    'rest_framework',
    'corsheaders'
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'CityPattle.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'CityPattle.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
# DATABASES = {
#     'default': dj_database_url.config(default=os.getenv('DATABASE_URL', 'postgresql://citypattle_user:PTn4G2khIe6rqoRXNKwPtyvZMxrOLs6G@dpg-d2r9atndiees73e21teg-a.singapore-postgres.render.com/citypattle'), conn_max_age=600),
# }


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# STATIC_ROOT = BASE_DIR / 'staticfiles'
# STATICFILES_DIRS = [
#     BASE_DIR / 'static',
# ]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Twilio configuration (set real values via environment or here for development)
# Example for environment usage in production:
# import os
# TWILIO_ACCOUNT_SID = os.getenv('TWILIO_ACCOUNT_SID', '')
# TWILIO_AUTH_TOKEN = os.getenv('TWILIO_AUTH_TOKEN', '')
# TWILIO_FROM_NUMBER = os.getenv('TWILIO_FROM_NUMBER', '')

TWILIO_ACCOUNT_SID = 'ACe10c39fb0ac09a8ddec46f8b69de1314'
TWILIO_AUTH_TOKEN = 'f4a9033290edfd1da3ac8259b1cbeb02'
TWILIO_FROM_NUMBER = '+18782167415'

# Email (SMTP) configuration for sending OTP via email
# Fill these with your SMTP provider credentials (e.g., Gmail, SendGrid SMTP)
# For production, load from environment variables instead of hardcoding.
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'anand.nexkites@gmail.com'
EMAIL_HOST_PASSWORD = 'bjcogrgyghnjfrbc'
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER